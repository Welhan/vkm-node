<div class="card bg-secondary">
    <div class="card-header bg-primary">
        <div class="d-flex justify-content-between">
            <div class="text-white">
                Weekly Quest
            </div>
            <div class="">
                <% if(role) { %>
                    <% if(role.Role=='Leader' ) { %>
                        <button type="button" class="btn btn-secondary" id="btnQuest">Max Quest <span
                                class="badge text-bg-danger">
                                <%= maxQuest %>
                            </span></button>
                        <% } %>
                            <% } %>
                                <button type="button" class="btn btn-secondary" id="btnNew">New quest</button>
                                <input type="hidden" name="csrfToken" id="csrfToken" value="<%= csrfToken %>">
            </div>
        </div>
    </div>
    <div class="card-body bg-white">
        <% if (successMessage && successMessage[0] !=undefined ) { %>
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fa fa-exclamation-circle me-2"></i>
                <%= successMessage[0] %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
            <% } %>
                <% if (errorMessage && errorMessage[0] !=undefined ) { %>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fa fa-exclamation-circle me-2"></i>
                        <%= errorMessage[0] %>
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    <% } %>
                        <form autocomplete="off" class="row g-3">
                            <?= csrf_field() ?>
                            <div class="col-md-3">
                                <label for="start_date" class="form-label">Date Quest</label>
                                <input type="text" class="form-control fw-bold" name="start_date" id="start_date">
                            </div>

                            <div class="col-md-3">
                                <label for="weekly_quest" class="form-label">Weekly Quest</label>
                                <select class="form-select fw-bold" style="width: 100%;" name="weekly_quest"
                                    id="weekly_quest">
                                    <option value="">ALL</option>
                                    <% quests.forEach(function(quest) { %>
                                        <option value="<%= quest.ID %>">
                                            <%= quest.Quest %>
                                        </option>
                                        <% }); %>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <label for="status" class="form-label">Status</label>
                                <select class="form-select fw-bold" style="width: 100%;" name="status" id="status">
                                    <option value="">ALL</option>
                                    <option value="PENDING" selected>PENDING</option>
                                    <option value="APPROVED">APPROVED</option>
                                    <option value="REJECTED">REJECTED</option>
                                </select>
                            </div>
                            <div class="col-12">
                                <button type="submit" class="btn btn-primary" id="btnFilter">Filter</button>
                            </div>
                        </form>
    </div>
    <div class="card-body bg-white">
        <div class="table-responsive">
            <table id="dataTable" class="table table-bordered table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Quest</th>
                        <th style="width: 140px;">Time Period</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="data"></tbody>
            </table>
        </div>
    </div>
</div>
<div id="viewModal" style="display: none;"></div>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.8.1/socket.io.js"
    integrity="sha512-8BHxHDLsOHx+flIrQ0DrZcea7MkHqRU5GbTHmbdzMRnAaoCIkZ97PqZcXJkKZckMMhqfoeaJE+DNUVuyoQsO3Q=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<% scripts=` %>
    <script async>
        let dataTable = null;
        function getDataQuest() {
            if (dataTable !== null) {
                dataTable.destroy();
            }
            dataTable = $('#dataTable').DataTable({
                "order": [[0, 'asc']],
                "searching": true,
                "ajax": {
                    "url": "/getDataQuest",
                    "dataType": "json",
                    "type": 'post',
                    "data": {
                        _csrf: $("#csrfToken").val(),
                        status: $('#status').val()
                    },
                    "dataSrc": function (data) {
                        let res = [];
                        for (let i = 0; i < data.data.length; i++) {
                            let row = data.data[i];
                            let quest = row.Quest.split(',')
                            let value = row.Value.split(',')
                            let prize = row.Prize.split(',')
                            let questString = [];

                            for (let i = 0; i < quest.length; i++) {
                                questString.push(quest[i] + ' (<strong>' + value[i] + '</strong>),' + ' Hadiah: <strong>' + prize[i] + '</strong>');
                            }

                            let finalString = questString.join('<br>');
                            let startDate = new Date(row.StartDate);
                            let endDate = new Date(row.EndDate);

                            const format = (d) => {

                                let date = new Date(d);
                                date = new Date(date.toLocaleString("en-US", { timeZone: "Asia/Jakarta" }));
                                date.setDate(date.getDate());

                                let day = ('0' + date.getDate()).slice(-2);
                                let month = ('0' + (date.getMonth() + 1)).slice(-2);
                                let year = date.getFullYear();

                                return day + "-" + month + "-" + year;
                            };

                            let startStr = format(startDate);
                            let endStr = format(endDate);
                            let approveDate = row.ApproveDate ? format(new Date(row.ApproveDate)) : ''

                            let timeRange = startStr + ' - ' + endStr;

                            let rowData = {
                                "ID": row.ID,
                                "Number": i + 1,
                                "Quest": finalString,
                                "Time": timeRange,
                                'Status': row.ApproveF,
                                'Role': data.role[0].Role,
                                'ApproveBy': row.ApproveBy,
                                'ApproveDate': approveDate,
                                'Remarks': row.Remarks
                            };
                            res.push(rowData);
                        }
                        return res;
                    }
                },
                "columns": [
                    { "data": "Number" },
                    { "data": "Quest" },
                    { "data": "Time" },
                    { "data": "Status", },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            let button = ''
                            if (row.Status == 'PENDING') {
                                if (row.Role == 'Admin') {
                                    button += '<button class="btn btn-info mr-3" onclick = "editQuest(' + row.ID + ')">Edit</button>'
                                    button += '<button class="btn btn-primary mr-3" onclick = "deleteQuest(' + row.ID + ')">Delete</button>'
                                }
                                if (row.Role == 'Leader') {
                                    button += '<button class="btn btn-success mr-3" onclick = "updateQuest(' + row.ID + ',\'' + "APPROVED" + '\')">Approve</button>'
                                    button += '<button class="btn btn-danger mr-3" onclick = "updateQuest(' + row.ID + ',\'' + "REJECTED" + '\')">Reject</button>'
                                }
                                return '<div class="d-flex align-items-center justify-content-center gap-2">' + button + '</div>'
                            } else {
                                button += 'By ' + row.ApproveBy + '<br> On ' + row.ApproveDate
                                if (row.Remarks) {
                                    button += '<br> <span class = "text-danger">' + row.Remarks + '</span>'
                                }
                                return button
                            }
                        }
                    }
                ]
            });
        }
    </script>
    <script>
        $("#btnFilter").on('click', function (e) {
            e.preventDefault()
            getDataQuest()
        })

        $("#btnQuest").on('click', function (e) {
            e.preventDefault();
            var $this = $(this);
            if ($this.data('clicked')) return;
            $this.data('clicked', true);
            $.post('/getMaxQuest', {
                _csrf: $('#csrfToken').val()
            }, function (data) {
                $('#viewModal').html(data.view);
                $('#viewModal').show();
                $('#maxQuestModal').modal('show');
                $this.data('clicked', false);
            }).fail(function () {
                $this.data('clicked', false);
            });
        });

        $("#btnNew").on('click', function (e) {
            e.preventDefault();
            var $this = $(this);
            if ($this.data('clicked')) return;
            $this.data('clicked', true);
            $.post('/getNewQuest', {
                _csrf: $('#csrfToken').val()
            }, function (data) {
                $('#viewModal').html(data.view);
                $('#viewModal').show();
                $('#newModal').modal('show');
                $this.data('clicked', false);
            }).fail(function () {
                $this.data('clicked', false);
            });
        });

        $(document).ready(function () {
            getDataQuest()
            jQuery('#start_date').datetimepicker({
                timepicker: false,
                format: 'd/m/Y',
                lang: 'id'
            });
        })

        function updateQuest(id, status) {
            $.ajax({
                url: '/getUpdateQuest',
                type: 'post',
                dataType: 'json',
                data: {
                    _csrf: $('#csrfToken').val(),
                    id,
                    status
                },
                beforeSend: function () {
                    $('.btn').attr('disabled', 'disabled')
                },
                success: function (response) {
                    console.log(response)
                    $('.btn').removeAttr('disabled', 'disabled')
                    $('#viewModal').html(response.view).show();
                    $('#confirmationModal').modal('show');
                },
                error: function (a, b, c) { alert(c) }
            })
        }
    </script>
    <% ` %>