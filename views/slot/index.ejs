<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Slot Machine</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js"></script>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #222;
            font-family: Arial, sans-serif;
        }

        #slot-machine {
            position: relative;
            background: linear-gradient(45deg, #444, #222);
            border: 10px solid #666;
            border-radius: 20px;
            padding: 20px;
            box-shadow: 0 0 30px rgba(0, 0, 0, 0.7), inset 0 0 20px rgba(255, 255, 255, 0.1);
            text-align: center;
            color: white;
            width: 350px;
        }

        canvas {
            display: block;
            margin: 20px auto;
            border: 5px solid #555;
            border-radius: 10px;
            background-color: #fff;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.5), inset 0 0 10px rgba(255, 255, 255, 0.3);
        }

        #spin-button {
            padding: 15px 30px;
            font-size: 20px;
            background: linear-gradient(145deg, #ff0000, #cc0000);
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background 0.3s, box-shadow 0.3s, transform 0.3s;
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.3), 0 5px #cc0000;
        }

        #spin-button:hover {
            background: linear-gradient(145deg, #cc0000, #ff0000);
            box-shadow: 0 15px 25px rgba(0, 0, 0, 0.5), 0 7px #cc0000;
        }

        #spin-button:active {
            background-color: #cc0000;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 3px #990000;
            transform: translateY(2px);
        }

        #header {
            font-size: 32px;
            margin-bottom: 20px;
            text-shadow: 2px 2px 5px #000;
        }

        #slot-name {
            font-size: 40px;
            font-weight: bold;
            color: #fff;
            text-shadow:
                -1px -1px 1px #000,
                1px -1px 1px #000,
                -1px 1px 1px #000,
                1px 1px 1px #000;
            background: linear-gradient(45deg, #444, #222);
            box-shadow:
                inset 1px 1px 5px rgba(255, 255, 255, 0.1),
                0 2px 5px rgba(0, 0, 0, 0.5);
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
        }
    </style>
</head>

<body>
    <div id="slot-machine">
        <div id="slot-name">Lucky Spin</div>
        <script>
            let symbols = ['üçí', 'üçã', 'üçâ', 'üîî', '‚≠ê', 'üçÄ'];
            let reels = [[], [], []];
            let reelY = [0, 0, 0];
            let reelSpeed = [0, 0, 0];
            let spinning = false;
            let winning = false;
            let flashColor = [255, 0, 0];
            let flashInterval;
            let winningLines = [];
            const symbolHeight = 100;
            const symbolWidth = 100;
            const canvasWidth = 300; // Adjusted canvas width
            const canvasHeight = symbolHeight * 3;
            const length = 9
            const width = 4
            function setup() {
                let canvas = createCanvas(canvasWidth, canvasHeight);
                canvas.parent('slot-machine');
                textAlign(CENTER, CENTER);
                textSize(64);
                for (let i = 0; i < 3; i++) {
                    for (let j = 0; j < 3; j++) {
                        reels[i].push(random(symbols));
                    }
                }

                let button = createButton('Spin');
                button.id('spin-button');
                button.parent('slot-machine');
                button.mousePressed(spinReels);
            }

            function draw() {
                background(200);

                if (winning) {
                    flashLights();
                }

                // Draw the reels
                for (let i = 0; i < 3; i++) {
                    for (let j = 0; j < 3; j++) {
                        let y = (j * symbolHeight + reelY[i]) % (symbolHeight * 3);
                        if (y < 0) y += symbolHeight * 3;
                        text(reels[i][(j + floor(reelY[i] / symbolHeight)) % 3], i * symbolWidth + symbolWidth / 2, y + symbolHeight / 2);
                    }
                }

                // Draw winning lines
                if (winningLines.length > 0) {
                    stroke(255, 0, 0);
                    strokeWeight(4);
                    for (let lineCoords of winningLines) {
                        line(lineCoords[0], lineCoords[1], lineCoords[2], lineCoords[3]);
                    }
                }

                // Update the reels if spinning
                if (spinning) {
                    for (let i = 0; i < 3; i++) {
                        reelY[i] += reelSpeed[i];
                        if (reelY[i] >= symbolHeight * 3) {
                            reelY[i] = 0;
                            reelSpeed[i] = 0;
                            for (let j = 0; j < 3; j++) {
                                reels[i][j] = random(symbols);
                            }
                        }
                    }
                    if (reelSpeed.every(speed => speed === 0)) {
                        spinning = false;
                        checkWin();
                    }
                }
            }

            function spinReels() {
                if (!spinning && !winning) {
                    spinning = true;
                    for (let i = 0; i < 3; i++) {
                        reelSpeed[i] = random(10, 20);
                    }
                }
            }

            function checkWin() {
                let win = false;
                winningLines = [];

                // Check horizontal lines
                for (let i = 0; i < 3; i++) {
                    if (reels[0][i] === reels[1][i] && reels[1][i] === reels[2][i]) {
                        win = true;
                        winningLines.push([0, i * symbolHeight + symbolHeight / 2, canvasWidth, i * symbolHeight + symbolHeight / 2]);
                    }
                }

                // Check vertical lines
                for (let i = 0; i < 3; i++) {
                    if (reels[i][0] === reels[i][1] && reels[i][1] === reels[i][2]) {
                        win = true;
                        winningLines.push([i * symbolWidth + symbolWidth / 2, 0, i * symbolWidth + symbolWidth / 2, canvasHeight]);
                    }
                }

                // Check diagonals
                if (reels[0][0] === reels[1][1] && reels[1][1] === reels[2][2]) {
                    win = true;
                    winningLines.push([0, 0, canvasWidth, canvasHeight]);
                }

                if (reels[2][0] === reels[1][1] && reels[1][1] === reels[0][2]) {
                    win = true;
                    winningLines.push([canvasWidth, 0, 0, canvasHeight]);
                }

                if (win) {
                    winning = true;
                    flashInterval = setInterval(changeFlashColor, 200);
                    setTimeout(stopFlashing, 5000); // Flash for 5 seconds
                    alert('You win!');
                } else {
                    alert('Try again!');
                }
            }

            function flashLights() {
                stroke(flashColor[0], flashColor[1], flashColor[2]);
                strokeWeight(10);
                noFill();
                rect(0, 0, width, height);
            }

            function changeFlashColor() {
                flashColor = [random(255), random(255), random(255)];
            }

            function stopFlashing() {
                clearInterval(flashInterval);
                winning = false;
                winningLines = [];
            }
        </script>
    </div>
</body>

</html>